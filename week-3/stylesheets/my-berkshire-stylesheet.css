html{
    background-color: #ffffff;
    color: #000080;
}

a {
    color: #800080;

}

a:visited {
    color: #ff0000;
}

ul {
    -webkit-column-count: 2;
    -moz-column-count: 2;
    column-count: 2;

    -webkit-column-gap: 20px; /* Chrome, Safari, Opera */
    -moz-column-gap: 20px; /* Firefox */
    column-gap: 20px;

    line-height: 250%;
}

ul li p {
  line-height: 100%;
}

header {
    font-weight: bold;
    font-size: 15px;
    text-align: center;
}

div{
    line-break:auto;
}

.first-letter{
    font-size: 20px;
}

.geico{
    font-size:10px;
    text-align:center;
    line-break: auto;
}

.hline {
    width: 100%;
    background: #000000;
    height: 1px;
}

#contact_info{
    font-size: 12px;
}

img {
  margin-top: 10px;
}

.addition_info {
  font-size:10px;
}

/*

-What is important to know when linking an external file (like a stylesheet) to an HTML file?
    The relative path you use to link it to the html file.

-What tricks did you use to help you with positioning? How hard was it to get the site as you wanted it?
For positioning, we used 'line-height' (to determine the spacing between lines), 'margin', and 'text-align', and 'line-break'. The great difficulty was looking for areas to reuse the code to be more efficient, specifying how you wanted the group to look rather than each individual element.

-What CSS did you use to modify the element style (like size, color, etc.)
    We used 'font-size', 'color', and 'font-weight'.

-Did you modify the HTML to include classes or ids? If so, which did you chose and why? If you didn't, how would you know which one to add to your HTML?
    If we used a style for only one HTML element, then we simply gave it an id. If we used a style for multiple instances of an HTML element, we created a class.

-When you compared your site to the actual code base, which do you think had cleaner code that followed best practices and why?
    It looked like the site didn't use css at all and it modified each individual html element. I definitely see the utility in using CSS and I see how it can greatly increase the reusibility and efficiency of your code. Having said that, I think there are things with organization I can do to clean up my code, and afterwards it might be better.
*/